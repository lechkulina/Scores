module.exports = `
BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS Guild(
  id TEXT PRIMARY KEY,
  name TEXT NOT NULL
);
CREATE TABLE IF NOT EXISTS Channel(
  id TEXT PRIMARY KEY,
  name TEXT NOT NULL
);
CREATE TABLE IF NOT EXISTS Message(
  id TEXT NOT NULL PRIMARY KEY,
  guildId TEXT NOT NULL,
  channelId TEXT NOT NULL
);
CREATE TABLE IF NOT EXISTS MessageChunk(
  id TEXT NOT NULL PRIMARY KEY,
  hash TEXT NOT NULL,
  position INTEGER NOT NULL,
  messageId TEXT NOT NULL REFERENCES Message(id) ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS User(
  id TEXT PRIMARY KEY,
  name TEXT NOT NULL,
  discriminator TEXT NOT NULL,
  guildId TEXT NOT NULL REFERENCES Guild(id)
);
CREATE TABLE IF NOT EXISTS Role(
  id TEXT PRIMARY KEY,
  name TEXT NOT NULL,
  guildId TEXT NOT NULL REFERENCES Guild(id)
);
CREATE TABLE IF NOT EXISTS Command(
  id TEXT PRIMARY KEY,
  description TEXT NOT NULL
);
CREATE TABLE IF NOT EXISTS RolePermission(
  id INTEGER PRIMARY KEY,
  roleId TEXT REFERENCES Role(id),
  commandId TEXT REFERENCES Command(id)
);
CREATE TABLE IF NOT EXISTS UserPermission(
  id INTEGER PRIMARY KEY,
  userId TEXT REFERENCES User(id),
  commandId TEXT REFERENCES Command(id)
);
CREATE TABLE IF NOT EXISTS Reason(
  id INTEGER PRIMARY KEY,
  name TEXT NOT NULL,
  min INTEGER NOT NULL CHECK (min > 0),
  max INTEGER NOT NULL CHECK (max > 0)
);
CREATE TABLE IF NOT EXISTS Points(
  id INTEGER PRIMARY KEY,
  points INTEGER CHECK (points > 0),
  acquireDate INTEGER DEFAULT CURRENT_TIMESTAMP,
  userId TEXT NOT NULL REFERENCES User(id),
  giverId TEXT NOT NULL REFERENCES User(id),
  reasonId INTEGER NOT NULL REFERENCES Reason(id) ON DELETE RESTRICT
);
CREATE TABLE IF NOT EXISTS Contest(
  id INTEGER PRIMARY KEY,
  name TEXT NOT NULL,
  description TEXT NOT NULL,
  announcementsThreshold INTEGER NOT NULL,
  activeBeginDate INTEGER NOT NULL,
  activeEndDate INTEGER NOT NULL,
  votingBeginDate INTEGER NOT NULL,
  votingEndDate INTEGER NOT NULL,
  guildId TEXT NOT NULL REFERENCES Guild(id)
);
CREATE TABLE IF NOT EXISTS Rule(
  id INTEGER PRIMARY KEY,
  description TEXT NOT NULL,
  contestId INTEGER NOT NULL REFERENCES Contest(id)
);
CREATE TABLE IF NOT EXISTS Reward(
  id INTEGER PRIMARY KEY,
  description TEXT NOT NULL,
  contestId INTEGER NOT NULL REFERENCES Contest(id)
);
CREATE TABLE IF NOT EXISTS Category(
  id INTEGER PRIMARY KEY,
  name TEXT NOT NULL,
  min INTEGER NOT NULL CHECK (min > 0),
  max INTEGER NOT NULL CHECK (max > 0)
);
CREATE TABLE IF NOT EXISTS ContestCategory(
  contestId INTEGER NOT NULL REFERENCES Contest(id),
  categoryId INTEGER NOT NULL REFERENCES Category(id),
  PRIMARY KEY(contestId, categoryId)
);
CREATE TABLE IF NOT EXISTS Entry(
  id INTEGER PRIMARY KEY,
  name TEXT NOT NULL,
  description TEXT,
  url TEXT NOT NULL,
  authorId TEXT NOT NULL REFERENCES User(id)
);
CREATE TABLE IF NOT EXISTS Vote(
  id INTEGER PRIMARY KEY,
  score INTEGER CHECK (score > 0),
  voteDate INTEGER DEFAULT CURRENT_TIMESTAMP,
  entryId INTEGER NOT NULL REFERENCES Entry(id),
  voterId TEXT NOT NULL REFERENCES User(id)
);
DROP TABLE IF EXISTS Settings;
CREATE TABLE IF NOT EXISTS Settings(
  key TEXT PRIMARY KEY,
  value TEXT
);
CREATE TABLE IF NOT EXISTS ContestAnnouncement(
  id INTEGER PRIMARY KEY,
  contestId INTEGER NOT NULL REFERENCES Contest(id),
  type TEXT NOT NULL
);
CREATE TABLE IF NOT EXISTS ContestAnnouncementMessages(
  contestAnnouncementId INTEGER NOT NULL REFERENCES ContestAnnouncement(id),
  messageId TEXT NOT NULL REFERENCES Message(id),
  PRIMARY KEY(contestAnnouncementId, messageId)
);
COMMIT;
`