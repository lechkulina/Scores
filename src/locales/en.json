{
  "main": {
    "common": {
      "no": "No",
      "yes": "Yes",
      "done": "Done",
      "canceled": "Canceled",
      "rankingPosition": "Ranking position",
      "acquireDate": "Acquired date",
      "points": "Points",
      "giverName": "Giver name",
      "sendHimDirectMessage": "Send him a direct message",
      "createPublicMessage": "Create a public message",
      "doBoth": "Do both",
      "reasonName": "Reason for granting",
      "role": "Role",
      "command": "Command",
      "user": "User",
      "contest": "Contest"
    },
    "formatters": {
      "weeks_one": "{{count}} week",
      "weeks_other": "{{count}} weeks",
      "days_one": "{{count}} day",
      "days_other": "{{count}} days",
      "hours_one": "{{count}} hour",
      "hours_other": "{{count}} hours",
      "minutes_one": "{{count}} minute",
      "minutes_other": "{{count}} minutes",
      "seconds_one": "{{count}} second",
      "seconds_other": "{{count}} seconds"
    },
    "validators": {
      "invalidLength": "❗ **{{description}}** has invalid value. It must be between {{minNameLength}} and {{maxNameLength}}",
      "invalidFirstLetter": "❗ **{{description}}** has to start from upper case letter",
      "invalidPointsRange": "❗ **{{description}}** has invalid range for the given points add reason **{{reasonName}}**. It must be between {{min}} and {{max}}",
      "invalidNumberZero": "❗ **{{description}}** can not be below zero",
      "invalidNumbersRange": "❗ **{{description}}** can not value value greater than **{{secondDescription}}**",
      "invalidDateFormat": "❗ **{{description}}** has invalid date format. Required date format is **{{dateInputFormat}}**",
      "invalidDatesRange": "❗ **{{min}}** can not be later date than **{{max}}**"
    },
    "autoCompete": {
      "recentlyGivenPoints": "{{points}} points added at {{acquireDate}} with reason {{reasonName}}"
    },
    "commands": {
      "errors": {
        "notAllowed": "❌ You do not have permissions to execute command **{{commandId}}**",
        "validationFailed": "⬇ Unable to execute a command. Found {{issuesCount}} issues regarding the given parameters:"
      },
      "addPoints": {
        "description": "Adds points to a user",
        "options": {
          "user": "User for which points points should be added",
          "reason": "Reason why points are being added",
          "points": "Number of points"
        },
        "errors": {
          "failure": "❗ Faield to add **{{points}}** points to user **{{userName}}**"
        },
        "messages": {
          "success": "✅ Added **{{points}}** points to user **{{userName}}** with reason **{{reasonName}}**\nWould you like to send notification?",
          "directMessage": "{{giverName}} added **{{points}}** points to you with reason {{reasonName}.",
          "directMessageSent": "✅ Direct message to **{{userName}}** was sent.",
          "publicMessage": "**{{userName}}** gained **{{points}}** points with reason {{reasonName}.",
          "publicMessageCreated": "✅ Public message at channel **{{channelName}}** was created."
        }
      },
      "removePoints": {
        "description": "Removes previously added points",
        "options": {
          "user": "User which points should be removed",
          "recentlyGivenPoints": "Points you have recently given"
        },
        "errors": {
          "failure": "❗ Failed to remove **{{points}}** points from user **{{userName}}**"
        },
        "messages": {
          "confirmation": "❓ Are you sure you want to remove **{{points}}** points from user **{{userName}}** added at {{acquireDate}} with reason {{reasonName}}?",
          "success": "✅ Removed points from user **{{userName}}**"
        }
      },
      "changePoints": {
        "description": "Changes previously added points",
        "options": {
          "user": "User which points should be changed",
          "recentlyGivenPoints": "$t(commands.removePoints.options.recentlyGivenPoints)",
          "reason": "$t(commands.addPoints.options.reason)",
          "points": "$t(commands.addPoints.options.points)"
        },
        "errors": {
          "failure": "❗ Failed to change **{{points}}** points from user **{{userName}}**"
        },
        "messages": {
          "confirmation": "❓ Are you sure you want to change **{{points}}** points from user **{{userName}}** added at {{acquireDate}} with reason {{reasonName}}?",
          "success": "✅ Changed points from user **{{userName}}**"
        }
      },
      "showPoints": {
        "description": "Shows user points",
        "errors": {
          "failure": "❗ Faield get points for user **{{userName}}**"
        },
        "messages": {
          "summary": "➡ You have **{{points}}** points acquired between {{minAcquireDate}} and {{maxAcquireDate}}",
          "recentPoints": "⬇ {{pointsCount}} most recently given points",
          "rankingPositions": "⬇ Ranking positions"
        }
      },
      "addReason": {
        "description": "Adds points add reason",
        "options": {
          "name": "Name of a points add reason",
          "min": "Minimal number of points that can be added for this reason",
          "vmax": "Maximum number of points that can be added for this reason"
        },
        "errors": {
          "failure": "❗ Failed to add points add reason."
        },
        "messages": {
          "success": "✅ Added new points add reason **{{reasonName}}**"
        }
      },
      "removeReason": {
        "description": "Removes existing points add reason.",
        "options": {
          "reason": "Points add reason"
        },
        "errors": {
          "failure": "❗ Failed to removed points add reason **{{reasonName}}**"
        },
        "messages": {
          "confirmation": "❓ Are you sure you want to remove points add reason **{{reasonName}}**?",
          "success": "✅ Removed points add reason **{{reasonName}}**"
        }
      },
      "changeReason": {
        "description": "Changes existing points add reason.",
        "options": {
          "reason": "$t(commands.removeReason.options.reason)",
          "name": "$t(commands.addReason.options.name)",
          "min": "$t(commands.addReason.options.min)",
          "max": "$t(commands.addReason.options.max)"
        },
        "errors": {
          "failure": "❗ Failed to change points add reason **{{reasonName}}**"
        },
        "messages": {
          "confirmation": "❓ Are you sure you want to change points add reason **{{reasonName}}**?",
          "success": "✅ Changed points add reason **{{reasonName}}**"
        }
      },
      "showHelp": {
        "description": "Shows list of available commands",
        "errors": {
          "failure": "❗ Failed to show help"
        },
        "messages": {
          "summary": "⬇ You have access to {{allowedCommandsCount}} commands",
          "allowedCommand": "✅ **{{id}}** - {{description}}",
          "notAllowedCommand": "❌ **{{id}}** - {{description}}"
        }
      },
      "grantRolePermission": {
        "description": "Grants role a permission to execute a command",
        "errors": {
          "failure": "❗ Failed to grant permission to execute command **{{commandId}}**"
        },
        "messages": {
          "confirmation": "❓ Are you sure you want to grant permission to execute command **{{commandId}}** by role **{{roleName}}**?",
          "success": "✅ Granted permission to execute command **{{commandId}}**"
        }
      },
      "revokeRolePermission": {
        "description": "Revokes role a permission to execute a command",
        "errors": {
          "failure": "❗ Failed to revoke permission to execute command **{{commandId}}**"
        },
        "messages": {
          "confirmation": "❓ Are you sure you want to revoke permission to execute command **{{commandId}}** by role **{{roleName}}**?",
          "success": "✅ Revoked permission to execute command **{{commandId}}**"
        }
      },
      "grantUserPermission": {
        "description": "Grants user a permission to execute a command",
        "errors": {
          "failure": "$t(commands.grantRolePermission.errors.failure)"
        },
        "messages": {
          "confirmation": "❓ Are you sure you want to grant permission to execute command **{{commandId}}** by user **{{userName}}**?",
          "success": "$t(commands.grantRolePermission.messages.success)"
        }
      },
      "revokeUserPermission": {
        "description": "Revokes user a permission to execute a command",
        "errors": {
          "failure": "$t(commands.revokeRolePermission.errors.failure)"
        },
        "messages": {
          "confirmation": "❓ Are you sure you want to revoke permission to execute command **{{commandId}}** by user **{{userName}}**?",
          "success": "$t(commands.revokeRolePermission.messages.success)"
        }
      },
      "addContest": {
        "description": "Adds new contest",
        "options": {
          "name": "Contest name",
          "description": "Contest description",
          "announcementDate": "Contest announcement date", 
          "activeBeginDate": "Contest begin date",
          "activeEndDate": "Contest end date",
          "votingBeginDate": "Voting begin date",
          "votingEndDate": "Voting end date"
        },
        "errors": {
          "failure": "❗ Failed to add new contest"
        },
        "messages": {
          "success": "✅ Added new contest **{{name}}**"
        }
      },
      "changeContest": {
        "description": "Changes existing contest",
        "options": {
          "name": "$t(commands.addContest.options.name)",
          "description": "$t(commands.addContest.options.description)",
          "announcementDate": "$t(commands.addContest.options.announcementDate)",
          "activeBeginDate": "$t(commands.addContest.options.activeBeginDate)",
          "activeEndDate": "$t(commands.addContest.options.activeEndDate)",
          "votingBeginDate": "$t(commands.v.options.votingBeginDate)",
          "votingEndDate": "$t(commands.addContest.options.votingEndDate)"
        },
        "errors": {
          "failure": "❗ Failed to changed contest **{{contestName}}**"
        },
        "messages": {
          "confirmation": "❓Are you sure you want to change contest **{{contestName}}**?",
          "success": "✅ Changed contest **{{contestName}}**"
        }
      },
      "removeContest": {
        "description": "Removes existing contest",
        "errors": {
          "failure": "❗ Failed to removed contest **{{contestName}}**"
        },
        "messages": {
          "confirmation": "❓Are you sure you want to remove contest **{{contestName}}**?",
          "success": "✅ Removed contest **{{contestName}}**"
        }
      },
      "addContestVoteCategory": {
        "description": "Adds new contest vote category",
        "options": {
          "name": "Contest vote category name",
          "description": "Contest vote category description",
          "max": "Maximum number of points that can be assigned in this contest vote category",
          "useByDefault": "Assign this contest vote category by default in every new contest"
        },
        "errors": {
          "failure": "❗ Failed to add new contest vote contest category"
        },
        "messages": {
          "success": "✅ Added new contest vote category **{{categoryName}}**"
        }
      },
      "removeContestVoteCategory": {
        "description": "Removes contest vote category",
        "options": {
          "contestVoteCategory": "Contest vote category"
        },
        "errors": {
          "failure": "❗ Failed to remove contest vote category **{{categoryName}}**"
        },
        "messages": {
          "confirmation": "❓ Are you sure you want to remove contest vote category **{{categoryName}}**?",
          "success": "✅ Removed contest vote category **{{categoryName}}**"
        }
      },
      "changeContestVoteCategory": {
        "description": "Changes contest vote category",
        "options": {
          "contestVoteCategory": "$t(commands.removeContestVoteCategory.options.contestVoteCategory)",
          "name": "$t(commands.addContestVoteCategory.options.name)",
          "description": "$t(commands.addContestVoteCategory.options.description)",
          "max": "$t(commands.addContestVoteCategory.options.max)",
          "useByDefault": "$t(commands.addContestVoteCategory.options.useByDefault)"
        },
        "errors": {
          "failure": "❗ Failed to changed contest vote category **{{categoryName}}**"
        },
        "messages": {
          "confirmation": "❓ Are you sure you want to change contest vote category **{{categoryName}}**?",
          "success": "✅ Changed contest vote category **{{categoryName}}**"
        }
      },
      "assignContestVoteCategory": {
        "description": "Assigns contest vote category to an existing contest",
        "options": {
          "contestVoteCategory": "$t(commands.removeContestVoteCategory.options.contestVoteCategory)"
        },
        "errors": {
          "failure": "❗ Failed to assign contest vote category **{{categoryName}}** to contest **{{contestName}}**"
        },
        "messages": {
          "success": "✅ Assigned contest vote category **{{categoryName}}** to contest **{{contestName}}**"
        }
      },
      "unassignContestVoteCategory": {
        "description": "Unassigns contest vote category from an existing contest",
        "options": {
          "contestVoteCategory": "$t(commands.removeContestVoteCategory.options.contestVoteCategory)"
        },
        "errors": {
          "failure": "❗ Failed to unassign contest vote category **{{categoryName}}** from contest **{{contestName}}**"
        },
        "messages": {
          "confirmation": "❓ Are you sure you want to unassign contest vote category **{{categoryName}}** from contest **{{contestName}}**?",
          "success": "✅ Unassigned contest vote category **{{categoryName}}** from contest **{{contestName}}**"
        }
      },
      "addContestRule": {
        "description": "Adds contest rule",
        "options": {
          "description": "Contest rule description",
          "useByDefault": "Assign this contest rule  by default in every new contest"
        },
        "errors": {
          "failure": "❗ Failed to add new contest rule **{{ruleDescription}}**"
        },
        "messages": {
          "success": "✅ Added new contest rule **{{ruleDescription}}**"
        }
      },
      "removeContestRule": {
        "description": "Removes contest rule",
        "options": {
          "contestRule": "Contest rule"
        },
        "errors": {
          "failure": "❗ Failed to remove contest rule **{{ruleDescription}}**"
        },
        "messages": {
          "confirmation": "❓ Are you sure you want to remove contest rule **{{ruleDescription}}**?",
          "success": "✅ Removed contest rule **{{ruleDescription}}**"
        }
      },
      "changeContestRule": {
        "description": "Changes contest rule",
        "options": {
          "contestRule": "$t(commands.removeContestRule.options.contestRule)",
          "description": "$t(commands.addContestRule.options.description)",
          "useByDefault": "$t(commands.addContestRule.options.useByDefault)"
        },
        "errors": {
          "failure": "❗ Failed to changed contest rule **{{ruleDescription}}**"
        },
        "messages": {
          "confirmation": "❓ Are you sure you want to change contest rule **{{ruleDescription}}**?",
          "success": "✅ Changed contest rule **{{ruleDescription}}**"
        }
      },
      "assignContestRule": {
        "description": "Assigns contest rule to an existing contest",
        "options": {
          "contestRule": "$t(commands.removeContestRule.options.contestRule)"
        },
        "errors": {
          "failure": "❗ Failed to assign contest rule **{{ruleDescription}}** to contest **{{contestName}}**"
        },
        "messages": {
          "success": "✅ Assigned contest rule *{{ruleDescription}}** to contest **{{contestName}}**"
        }
      },
      "unassignContestRule": {
        "description": "Unassigns contest rule from an existing contest",
        "options": {
          "contestRule": "$t(commands.removeContestRule.options.contestRule)"
        },
        "errors": {
          "failure": "❗ Failed to unassign contest rule **{{ruleDescription}}** from contest **{{contestName}}**"
        },
        "messages": {
          "confirmation": "❓ Are you sure you want to unassign contest rule **{{ruleDescription}}** from contest **{{contestName}}**?",
          "success": "✅ Unassigned contest rule **{{ruleDescription}}** from contest **{{contestName}}**"
        }
      },
      "addContestReward": {
        "description": "Adds contest reward",
        "options": {
          "description": "Contest reward description",
          "useByDefault": "Assign this contest reward  by default in every new contest"
        },
        "errors": {
          "failure": "❗ Failed to add new contest reward **{{rewardDescription}}**"
        },
        "messages": {
          "success": "✅ Added new contest reward **{{rewardDescription}}**"
        }
      },
      "removeContestReward": {
        "description": "Removes contest reward",
        "options": {
          "contestReward": "Contest reward"
        },
        "errors": {
          "failure": "❗ Failed to remove contest reward **{{rewardDescription}}**"
        },
        "messages": {
          "confirmation": "❓ Are you sure you want to remove contest reward **{{rewardDescription}}**?",
          "success": "✅ Removed contest reward **{{rewardDescription}}**"
        }
      },
      "changeContestReward": {
        "description": "Changes contest reward",
        "options": {
          "contestReward": "$t(commands.removeContestReward.options.contestReward)",
          "description": "$t(commands.addContestReward.options.description)",
          "useByDefault": "$t(commands.addContestReward.options.useByDefault)"
        },
        "errors": {
          "failure": "❗ Failed to changed contest reward **{{rewardDescription}}**"
        },
        "messages": {
          "confirmation": "❓ Are you sure you want to change contest reward **{{rewardDescription}}**?",
          "success": "✅ Changed contest reward **{{rewardDescription}}**"
        }
      },
      "assignContestReward": {
        "description": "Assigns contest reward to an existing contest",
        "options": {
          "contestReward": "$t(commands.removeContestReward.options.contestReward)"
        },
        "errors": {
          "failure": "❗ Failed to assign contest reward **{{rewardDescription}}** to contest **{{contestName}}**"
        },
        "messages": {
          "success": "✅ Assigned contest reward *{{rewardDescription}}** to contest **{{contestName}}**"
        }
      },
      "unassignContestReward": {
        "description": "Unassigns contest reward from an existing contest",
        "options": {
          "contestReward": "$t(commands.removeContestReward.options.contestReward)"
        },
        "errors": {
          "failure": "❗ Failed to unassign contest reward **{{rewardDescription}}** from contest **{{contestName}}**"
        },
        "messages": {
          "confirmation": "❓ Are you sure you want to unassign contest reward **{{rewardDescription}}** from contest **{{contestName}}**?",
          "success": "✅ Unassigned contest reward **{{rewardDescription}}** from contest **{{contestName}}**"
        }
      },
      "submitContestEntry": {
        "description": "Submits new contest entry",
        "options": {
          "contest": "Active contest",
          "name": "Name of the entry",
          "description": "Short description",
          "url": "URL to gallery or movie"
        },
        "errors": {
          "failure": "❗ Failed to submit entry **{{entryName}}** to contest **{{contestName}}**"
        },
        "messages": {
          "success": "✅ Submitted entry **{{entryName}}** to contest **{{contestName}}**"
        }
      },
      "cancelContestEntry": {
        "description": "Cancels submitted contest entry",
        "options": {
          "contest": "$t(commands.submitContestEntry.options.contest)",
          "contestEntry": "Submitted contest entry"
        },
        "errors": {
          "failure": "❗ Failed to cancel contest entry **{{entryName}}** submitted to contest **{{contestName}}**"
        },
        "messages": {
          "confirmation": "❓ Are you sure you want to cancel contest entry **{{entryName}}** submitted to contest **{{contestName}}**?",
          "success": "✅ Canceled contest entry **{{entryName}}** from contest **{{contestName}}**"
        }
      },
      "changeContestEntry": {
        "description": "Changes submitted contest entry",
        "options": {
          "contest": "$t(commands.submitContestEntry.options.contest)",
          "contestEntry": "$t(commands.submitContestEntry.cancelContestEntry.contestEntry)",
          "name": "$t(commands.submitContestEntry.cancelContestEntry.name)",
          "description": "$t(commands.submitContestEntry.cancelContestEntry.description)",
          "url": "$t(commands.submitContestEntry.cancelContestEntry.url)"
        },
        "errors": {
          "failure": "❗ Failed to changed contest entry **{{entryName}}** submitted to contest **{{contestName}}**"
        },
        "messages": {
          "confirmation": "❓ Are you sure you want to change contest entry **{{entryName}}** submitted to contest  **{{contestName}}**?",
          "success": "✅ Changed contest entry **{{entryName}}** submitted to contest **{{contestName}}**"
        }
      }
    }
  }
}
